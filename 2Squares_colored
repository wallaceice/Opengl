#include <GL/freeglut.h>
#include <GL/GL.h>
#include <GL/glut.h>
#include <iostream>




void display(void)
{
    /*  clear all pixels  */
    glClear(GL_COLOR_BUFFER_BIT);


    glBegin(GL_QUADS);
    glColor3f(0, 255,0);

    glVertex3f(-0.25, 0.25, 0.0);
    glVertex3f(-0.75, 0.25, 0.0);
    glVertex3f(-0.75, 0.75, 0.0);
    glVertex3f(-0.25, 0.75, 0.0);
    glEnd();


    //quad2
    glBegin(GL_QUADS);
    glColor3f(1.0, 1.0, 1.0);

    glVertex3f(0.25, 0.25, 0.0);
    glVertex3f(0.75, 0.25, 0.0);
    glVertex3f(0.75, 0.75, 0.0);
    glVertex3f(0.25, 0.75, 0.0);
    glEnd();

    /*  don't wait!
     *  start processing buffered OpenGL routines
     */
    glFlush();
}

void init(void)
{
    /*  select clearing (background) color       */
    glClearColor(0.0, 0.0, 0.0, 0.0);

    /*  initialize viewing values  */
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-1.0, 1.0, -1.0, 1.0, -1.0, 1.0);
}

void keyboard(unsigned char key, int x, int y) {
    switch (key) {
    case 27:                                         // tecla Esc (encerra o programa)
        exit(0);
        break;
    }
}

/*
 *  Declare initial window size, position, and display mode
 *  (single buffer and RGBA).  Open window with "hello"
 *  in its title bar.  Call initialization routines.
 *  Register callback function to display graphics.
 *  Enter main loop and process events.
 */



void reshape(int w, int h)
{
    glViewport(0, 0, (GLsizei)w, (GLsizei)h);
    glLoadIdentity();

}


void redraw()
{

    glColor3f(1, 0, 0);
    glVertex3f(-0.25, 0.25, 0.0);
    glVertex3f(-0.75, 0.25, 0.0);
    glVertex3f(-0.75, 0.75, 0.0);
    glVertex3f(-0.25, 0.75, 0.0);


    //quad2

    glColor3f(0, 1.0, 1.0);
    glVertex3f(0.25, 0.25, 0.0);
    glVertex3f(0.75, 0.25, 0.0);
    glVertex3f(0.75, 0.75, 0.0);
    glVertex3f(0.25, 0.75, 0.0);


    glutPostRedisplay();

}

void redraw2()
{


    glBegin(GL_QUADS);
    glColor3f(0, 0, 0);
    glVertex3f(0.25, 0.25, 0.0);
    glColor3f(0, 255, 0);

    glVertex3f(0.75, 0.25, 0.0);
    glColor3f(0, 255, 0);

    glVertex3f(0.75, 0.75, 0.0);
    glColor3f(0, 255, 0);

    glVertex3f(0.25, 0.75, 0.0);
    glColor3f(0, 255, 0);


    glBegin(GL_QUADS);
    glColor3f(1, 1.0, 1.0);

    glVertex3f(0.25, 0.25, 0.0);
    glVertex3f(0.75, 0.25, 0.0);
    glVertex3f(0.75, 0.75, 0.0);
    glVertex3f(0.25, 0.75, 0.0);
    glEnd();

    glutPostRedisplay();
}

void mouse(int button, int state, int x, int y){

    if (button == GLUT_LEFT_BUTTON) {



        if (x >= 60 and x <= 185 and y >= 60 and y <= 185){
            glutIdleFunc(redraw);
        }
        if (x >= 312 and x <= 435 and y >= 60 and y <= 185){
            glutIdleFunc(redraw2);

        }

    }

}
int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("hello");
    init();
    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    glutMouseFunc(mouse);
    glutKeyboardFunc(keyboard);
    glutMainLoop();
    return 0;
}
